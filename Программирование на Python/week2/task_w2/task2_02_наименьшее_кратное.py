"""
 В команде биологов a человек, а в команде информатиков — b человек.

 Нужно заранее разрезать пирог таким образом, чтобы можно было раздать
 кусочки пирога любой команде, выигравшей соревнование, при этом каждому
 участнику этой команды должно достаться одинаковое число кусочков пирога.
 И так как не хочется резать пирог на слишком мелкие кусочки, нужно
 найти минимальное подходящее число.

 Программа должна считывать размеры команд (два положительных целых числа a и b,
 каждое число вводится на отдельной строке) и выводить наименьшее число d,
 которое делится на оба этих числа без остатка.

Sample Input 1:
7
5
Sample Output 1:
35

Sample Input 2:
15
15
Sample Output 2:
15

Sample Input 3:
12
16
Sample Output 3:
48

НОД
https://younglinux.info/algorithm/euclidean
НОК
https://younglinux.info/python/task/lcm

"""
a, b = int(input()), int(input())

d = max(a, b)

while True:
    if d % a == 0 and d % b == 0:
        break
    d += 1

print(d)

"""
========================================================

a, b = int(input()), int(input())

d = max(a, b)

while d % a != 0 or d % b != 0:
    d += 1

print(d)

========================================================

import math
a = int(input())
b = int(input())
print(a * b // math.gcd(a, b))

========================================================

a = int(input())
b = int(input())

m = a
if b > a:
    m = b
    
while m % a != m % b:
    m = m + 1

print(m)

======================================================

#Найти НОК двух чисел
a=int(input())
b=int(input())
m=a
n=b
#Сперва найдём НОД с помощью алгоритма Евклида:
while a!=b:
    if a>b:
        a=a-b
    else:
        b=b-a
#Затем вычислим НОК с помощью формулы: НОК=(a*b)/НОД:
print(int(((m*n)/a)))

======================================================

a=int(input())
b=int(input())

lcm = a * b
#поиск наибольшего общего делителя
while a % b != 0:
    a, b = b, a % b
#вычисляем наименьшее общее кратное
lcm //= b

print(lcm)

======================================================
"""